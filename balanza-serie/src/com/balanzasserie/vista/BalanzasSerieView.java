/*
 * BalanzasSerieView.java
 */

package com.balanzasserie.vista;

import com.balanzasserie.logica.BalanzasManager;
import com.balanzasserie.logica.Balanza;
import com.balanzasserie.logica.EstadoPuerto;
import com.balanzasserie.logica.Medicion;
import com.balanzasserie.logica.PropertiesManager;
import com.balanzasserie.logica.httpserver.ServidorHTTP;
import com.balanzasserie.logica.puertoserie.SerialParameters;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class BalanzasSerieView extends FrameView implements IVistaListener {
    private SimpleDateFormat dateFormatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

    public BalanzasSerieView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });

        iniciarConfiguracion();

        iniciarConexion();

        BalanzasManager.getInstance().addVistaListener(this);
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = BalanzasSerieApp.getApplication().getMainFrame();
            aboutBox = new BalanzasSerieAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        BalanzasSerieApp.getApplication().show(aboutBox);
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        puertoSerieComboBox = new javax.swing.JComboBox();
        velocidadPuertoTextField = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        controlFlujoComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        paridadComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        bitsDatosComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        bitsParadaComboBox = new javax.swing.JComboBox();
        saveSettingsButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        estadoLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        ultimaMedicionLabel = new javax.swing.JLabel();
        ultimaActualizacionLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        puertoSerieComboBox1 = new javax.swing.JComboBox();
        velocidadPuertoTextField1 = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        controlFlujoComboBox1 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        paridadComboBox1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        bitsDatosComboBox1 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        bitsParadaComboBox1 = new javax.swing.JComboBox();
        saveSettingsButton1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        estadoLabel1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        ultimaMedicionLabel1 = new javax.swing.JLabel();
        ultimaActualizacionLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(260);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(273, 40));
        jPanel4.setLayout(new java.awt.BorderLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(BalanzasSerieView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel4.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel2, gridBagConstraints);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel3, gridBagConstraints);

        puertoSerieComboBox.setName("puertoSerieComboBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(puertoSerieComboBox, gridBagConstraints);

        velocidadPuertoTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        velocidadPuertoTextField.setText(resourceMap.getString("velocidadPuertoTextField.text")); // NOI18N
        velocidadPuertoTextField.setName("velocidadPuertoTextField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(velocidadPuertoTextField, gridBagConstraints);

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel7, gridBagConstraints);

        controlFlujoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"None", "Xon/Xoff Out", "Xon/Xoff In", "RTS/CTS In", "RTS/CTS Out"}));
        controlFlujoComboBox.setName("controlFlujoComboBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(controlFlujoComboBox, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel8, gridBagConstraints);

        paridadComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"None", "Even", "Odd"}));
        paridadComboBox.setName("paridadComboBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(paridadComboBox, gridBagConstraints);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel9, gridBagConstraints);

        bitsDatosComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"5", "6", "7", "8"}));
        bitsDatosComboBox.setSelectedIndex(3);
        bitsDatosComboBox.setName("bitsDatosComboBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(bitsDatosComboBox, gridBagConstraints);

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel5.add(jLabel10, gridBagConstraints);

        bitsParadaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"1", "1.5", "2"}));
        bitsParadaComboBox.setName("bitsParadaComboBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel5.add(bitsParadaComboBox, gridBagConstraints);

        saveSettingsButton.setText(resourceMap.getString("saveSettingsButton.text")); // NOI18N
        saveSettingsButton.setName("saveSettingsButton"); // NOI18N
        saveSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 11, 0);
        jPanel5.add(saveSettingsButton, gridBagConstraints);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanel6.add(jLabel4, gridBagConstraints);

        estadoLabel.setFont(resourceMap.getFont("estadoLabel.font")); // NOI18N
        estadoLabel.setForeground(resourceMap.getColor("estadoLabel.foreground")); // NOI18N
        estadoLabel.setText(resourceMap.getString("estadoLabel.text")); // NOI18N
        estadoLabel.setName("estadoLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel6.add(estadoLabel, gridBagConstraints);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel6.add(jLabel6, gridBagConstraints);

        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setLayout(new java.awt.BorderLayout());

        ultimaMedicionLabel.setFont(resourceMap.getFont("ultimaMedicionLabel.font")); // NOI18N
        ultimaMedicionLabel.setForeground(resourceMap.getColor("ultimaMedicionLabel.foreground")); // NOI18N
        ultimaMedicionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultimaMedicionLabel.setText(resourceMap.getString("ultimaMedicionLabel.text")); // NOI18N
        ultimaMedicionLabel.setName("ultimaMedicionLabel"); // NOI18N
        jPanel7.add(ultimaMedicionLabel, java.awt.BorderLayout.CENTER);

        ultimaActualizacionLabel.setFont(resourceMap.getFont("ultimaActualizacionLabel.font")); // NOI18N
        ultimaActualizacionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultimaActualizacionLabel.setText(resourceMap.getString("ultimaActualizacionLabel.text")); // NOI18N
        ultimaActualizacionLabel.setName("ultimaActualizacionLabel"); // NOI18N
        jPanel7.add(ultimaActualizacionLabel, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(24, 12, 24, 12);
        jPanel6.add(jPanel7, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel6);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jSplitPane2.setDividerLocation(260);
        jSplitPane2.setName("jSplitPane2"); // NOI18N

        jPanel8.setName("jPanel8"); // NOI18N
        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setPreferredSize(new java.awt.Dimension(273, 40));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel9.add(jLabel5, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel10.setName("jPanel10"); // NOI18N
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel11, gridBagConstraints);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel12, gridBagConstraints);

        puertoSerieComboBox1.setName("puertoSerieComboBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(puertoSerieComboBox1, gridBagConstraints);

        velocidadPuertoTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        velocidadPuertoTextField1.setText(resourceMap.getString("velocidadPuertoTextField1.text")); // NOI18N
        velocidadPuertoTextField1.setName("velocidadPuertoTextField1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(velocidadPuertoTextField1, gridBagConstraints);

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel13, gridBagConstraints);

        controlFlujoComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"None", "Xon/Xoff Out", "Xon/Xoff In", "RTS/CTS In", "RTS/CTS Out"}));
        controlFlujoComboBox1.setName("controlFlujoComboBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(controlFlujoComboBox1, gridBagConstraints);

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel14, gridBagConstraints);

        paridadComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"None", "Even", "Odd"}));
        paridadComboBox1.setName("paridadComboBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(paridadComboBox1, gridBagConstraints);

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel15, gridBagConstraints);

        bitsDatosComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"5", "6", "7", "8"}));
        bitsDatosComboBox1.setSelectedIndex(3);
        bitsDatosComboBox1.setName("bitsDatosComboBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(bitsDatosComboBox1, gridBagConstraints);

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        jPanel10.add(jLabel16, gridBagConstraints);

        bitsParadaComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"1", "1.5", "2"}));
        bitsParadaComboBox1.setName("bitsParadaComboBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jPanel10.add(bitsParadaComboBox1, gridBagConstraints);

        saveSettingsButton1.setText(resourceMap.getString("saveSettingsButton1.text")); // NOI18N
        saveSettingsButton1.setName("saveSettingsButton1"); // NOI18N
        saveSettingsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 11, 0);
        jPanel10.add(saveSettingsButton1, gridBagConstraints);

        jPanel8.add(jPanel10, java.awt.BorderLayout.CENTER);

        jSplitPane2.setRightComponent(jPanel8);

        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanel11.add(jLabel17, gridBagConstraints);

        estadoLabel1.setFont(resourceMap.getFont("estadoLabel.font")); // NOI18N
        estadoLabel1.setForeground(resourceMap.getColor("estadoLabel1.foreground")); // NOI18N
        estadoLabel1.setText(resourceMap.getString("estadoLabel1.text")); // NOI18N
        estadoLabel1.setName("estadoLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel11.add(estadoLabel1, gridBagConstraints);

        jLabel18.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel11.add(jLabel18, gridBagConstraints);

        jPanel12.setName("jPanel12"); // NOI18N
        jPanel12.setLayout(new java.awt.BorderLayout());

        ultimaMedicionLabel1.setFont(resourceMap.getFont("ultimaMedicionLabel.font")); // NOI18N
        ultimaMedicionLabel1.setForeground(resourceMap.getColor("ultimaMedicionLabel1.foreground")); // NOI18N
        ultimaMedicionLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultimaMedicionLabel1.setText(resourceMap.getString("ultimaMedicionLabel1.text")); // NOI18N
        ultimaMedicionLabel1.setName("ultimaMedicionLabel1"); // NOI18N
        jPanel12.add(ultimaMedicionLabel1, java.awt.BorderLayout.CENTER);

        ultimaActualizacionLabel1.setFont(resourceMap.getFont("ultimaActualizacionLabel.font")); // NOI18N
        ultimaActualizacionLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultimaActualizacionLabel1.setText(resourceMap.getString("ultimaActualizacionLabel1.text")); // NOI18N
        ultimaActualizacionLabel1.setName("ultimaActualizacionLabel1"); // NOI18N
        jPanel12.add(ultimaActualizacionLabel1, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(24, 12, 24, 12);
        jPanel11.add(jPanel12, gridBagConstraints);

        jSplitPane2.setLeftComponent(jPanel11);

        jPanel2.add(jSplitPane2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        mainPanel.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(BalanzasSerieView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
                statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                        .addGroup(statusPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(statusMessageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 339, Short.MAX_VALUE)
                                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusAnimationLabel)
                                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
                statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusPanelLayout.createSequentialGroup()
                                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(statusMessageLabel)
                                        .addComponent(statusAnimationLabel)
                                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void saveSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsButtonActionPerformed
        SerialParameters params = new SerialParameters();
        params.setPortName(puertoSerieComboBox.getSelectedItem().toString());
        params.setBaudRate(velocidadPuertoTextField.getText());
        params.setFlowControlIn(controlFlujoComboBox.getSelectedItem().toString());
        params.setDatabits(bitsDatosComboBox.getSelectedItem().toString());
        params.setStopbits(bitsParadaComboBox.getSelectedItem().toString());
        params.setParity(paridadComboBox.getSelectedItem().toString());

        PropertiesManager.setBalanza1SerialParameters(params);

        iniciarConexion();
    }//GEN-LAST:event_saveSettingsButtonActionPerformed

    private void saveSettingsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsButton1ActionPerformed
        SerialParameters params2 = new SerialParameters();
        params2.setPortName(puertoSerieComboBox1.getSelectedItem().toString());
        params2.setBaudRate(velocidadPuertoTextField1.getText());
        params2.setFlowControlIn(controlFlujoComboBox1.getSelectedItem().toString());
        params2.setDatabits(bitsDatosComboBox1.getSelectedItem().toString());
        params2.setStopbits(bitsParadaComboBox1.getSelectedItem().toString());
        params2.setParity(paridadComboBox1.getSelectedItem().toString());

        PropertiesManager.setBalanza2SerialParameters(params2);

        iniciarConexion();
    }//GEN-LAST:event_saveSettingsButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bitsDatosComboBox;
    private javax.swing.JComboBox bitsDatosComboBox1;
    private javax.swing.JComboBox bitsParadaComboBox;
    private javax.swing.JComboBox bitsParadaComboBox1;
    private javax.swing.JComboBox controlFlujoComboBox;
    private javax.swing.JComboBox controlFlujoComboBox1;
    private javax.swing.JLabel estadoLabel;
    private javax.swing.JLabel estadoLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JComboBox paridadComboBox;
    private javax.swing.JComboBox paridadComboBox1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JComboBox puertoSerieComboBox;
    private javax.swing.JComboBox puertoSerieComboBox1;
    private javax.swing.JButton saveSettingsButton;
    private javax.swing.JButton saveSettingsButton1;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel ultimaActualizacionLabel;
    private javax.swing.JLabel ultimaActualizacionLabel1;
    private javax.swing.JLabel ultimaMedicionLabel;
    private javax.swing.JLabel ultimaMedicionLabel1;
    private javax.swing.JFormattedTextField velocidadPuertoTextField;
    private javax.swing.JFormattedTextField velocidadPuertoTextField1;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

    private void iniciarConfiguracion() {
        List<String> puertosSerieDisponibles = BalanzasManager.listarPuertosDisponibles();
        for (String s : puertosSerieDisponibles) {
            puertoSerieComboBox.addItem(s);
            puertoSerieComboBox1.addItem(s);
        }

        // iniciar balanza 1
        SerialParameters params = PropertiesManager.getBalanza1SerialParameters();
        if (puertosSerieDisponibles.contains(params.getPortName())) {
            puertoSerieComboBox.setSelectedItem(params.getPortName());
        }
        velocidadPuertoTextField.setText(params.getBaudRateString());
        controlFlujoComboBox.setSelectedItem(params.getFlowControlInString());
        bitsDatosComboBox.setSelectedItem(params.getDatabitsString());
        bitsParadaComboBox.setSelectedItem(params.getStopbitsString());
        paridadComboBox.setSelectedItem(params.getParityString());

        // iniciar balanza 2
        SerialParameters params2 = PropertiesManager.getBalanza2SerialParameters();
        if (puertosSerieDisponibles.contains(params2.getPortName())) {
            puertoSerieComboBox1.setSelectedItem(params2.getPortName());
        }
        velocidadPuertoTextField1.setText(params2.getBaudRateString());
        controlFlujoComboBox1.setSelectedItem(params2.getFlowControlInString());
        bitsDatosComboBox1.setSelectedItem(params2.getDatabitsString());
        bitsParadaComboBox1.setSelectedItem(params2.getStopbitsString());
        paridadComboBox1.setSelectedItem(params2.getParityString());
    }

    private void iniciarConexion() {
        // iniciar balanza 1
        try {
            BalanzasManager.getInstance().inicializarBalanza1();
            estadoLabel.setForeground(new Color(0x06400));
            estadoLabel.setText(EstadoPuerto.CONECTADO.getLabel());
        } catch (Exception ex) {
            Logger.getLogger(BalanzasSerieView.class.getName()).log(Level.SEVERE, null, ex);

            JOptionPane.showMessageDialog(null, "Error al abrir puerto " + puertoSerieComboBox.getSelectedItem() + " en balanza 1", "Error", JOptionPane.ERROR_MESSAGE);
            estadoLabel.setForeground(Color.RED);
            estadoLabel.setText(EstadoPuerto.DESCONECTADO.getLabel());
        }

        // iniciar balanza 2
        try {
            BalanzasManager.getInstance().inicializarBalanza2();
            estadoLabel1.setForeground(new Color(0x06400));
            estadoLabel1.setText(EstadoPuerto.CONECTADO.getLabel());
        } catch (Exception ex) {
            Logger.getLogger(BalanzasSerieView.class.getName()).log(Level.SEVERE, null, ex);

            JOptionPane.showMessageDialog(null, "Error al abrir puerto " + puertoSerieComboBox.getSelectedItem() + " en balanza 2", "Error", JOptionPane.ERROR_MESSAGE);
            estadoLabel1.setForeground(Color.RED);
            estadoLabel1.setText(EstadoPuerto.DESCONECTADO.getLabel());
        }
        try {
            ServidorHTTP.getInstance().iniciar();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al iniciar httpserver ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void nuevaMedicionRecibida(Medicion medicion) {
        if (medicion != null) {
            if (medicion.getBalanza().equals(Balanza.BALANZA1)) {
                ultimaMedicionLabel.setText(medicion.getPesoConUnidad());
                ultimaActualizacionLabel.setText("(" + dateFormatter.format(new Date()) + ")");
            } else if (medicion.getBalanza().equals(Balanza.BALANZA2)) {
                ultimaMedicionLabel1.setText(medicion.getPesoConUnidad());
                ultimaActualizacionLabel1.setText("(" + dateFormatter.format(new Date()) + ")");
            }
        }
    }
}
